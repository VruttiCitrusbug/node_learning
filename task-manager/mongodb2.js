const { MongoClient, ObjectId } = require("mongodb");

const connectionURL = "mongodb://127.0.0.1:27017";
const dbName = "task-manager";

// In JavaScript, the await keyword is used in an async function to pause the execution of the function until a Promise is resolved. This is particularly useful when working with asynchronous operations like fetching data from a server or reading a file, where you want to wait for the operation to complete before continuing with the rest of your code.

async function main() {
    const client = await MongoClient.connect(connectionURL);
    const db = client.db(dbName)

    //FINDONE

    // db.collection('users').findOne({name: 'Vrutti'}).then((res)=>{
    //     console.log(res)
    //     //{
    //     //   _id: new ObjectId("64d1c9a5bd813639da891742"),
    //     //   name: 'Vrutti',
    //     //   age: 23
    //     // }
    // })

    //FINDONEBYID

    // db.collection('users').findOne({_id: '64d1c9a5bd813639da891742'}).then((res)=>{
    //     console.log(res)//null
    //     // Data Type: In MongoDB, the _id field is usually stored as an ObjectId type, which is a specific binary data type generated by MongoDB. When you use ObjectId('64d1c9a5bd813639da891742'), you're explicitly creating an ObjectId instance.
    // })


    // db.collection('users').findOne({_id: new ObjectId('64d1c9a5bd813639da891742')}).then((res)=>{
    //     console.log(res)
    // })

    //FIND MULTI
    // const data = await db.collection('users').find( { name: 'Vrutti'}).toArray()
    // console.log(data);


    //UPDATEONE
    // db.collection('users').updateOne(
    // {
    //     _id: new ObjectId('64d1c7ef2eb20c33bf5863db')
    // },
    // {
    //     $set:{
    //         name:"Parth"
    //     }
        
    // }).then((res)=>{
    // console.log(res)
    // // {
    // //     acknowledged: true,
    // //     modifiedCount: 1,
    // //     upsertedId: null,
    // //     upsertedCount: 0,
    // //     matchedCount: 1
    // //   }
    // }).catch((err)=>{
    //     console.log(err)
    // })

    //UPDATEALL

    // db.collection('users').updateMany(
    // {
    //     name: 'Vrutti'
    // },
    // {
    //     $set:{
    //         name:"Parth"
    //     }
        
    // }).then((res)=>{
    // console.log(res)
    // // {
    // //     acknowledged: true,
    // //     modifiedCount: 1,
    // //     upsertedId: null,
    // //     upsertedCount: 0,
    // //     matchedCount: 1
    // //   }
    // }).catch((err)=>{
    //     console.log(err)
    // })

    //DELETE ONE
    // db.collection('users').deleteOne(
    //     {
    //         _id: new ObjectId('64d1c7ef2eb20c33bf5863db')
    //     }).then((res)=>{
    //     console.log(res)
    //     // {
    //     //     acknowledged: true,
    //     //     modifiedCount: 1,
    //     //     upsertedId: null,
    //     //     upsertedCount: 0,
    //     //     matchedCount: 1
    //     //   }
    //     }).catch((err)=>{
    //         console.log(err)
    //         //{ acknowledged: true, deletedCount: 1 }
    //     })

    // db.collection('users').deleteMany(
    //     {
    //         name: 'Jayshree'
    //     }).then((res)=>{
    //     console.log(res)
    //     // {
    //     //     acknowledged: true,
    //     //     modifiedCount: 1,
    //     //     upsertedId: null,
    //     //     upsertedCount: 0,
    //     //     matchedCount: 1
    //     //   }
    //     }).catch((err)=>{
    //         console.log(err)
    //         //{ acknowledged: true, deletedCount: 4 }
    //     })
}
 
main().catch((error)=>{console.log(error)});